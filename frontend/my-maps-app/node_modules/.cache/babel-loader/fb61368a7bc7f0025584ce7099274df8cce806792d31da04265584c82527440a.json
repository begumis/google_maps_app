{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Desktop\\\\google_maps_app\\\\frontend\\\\my-maps-app\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, Marker, useLoadScript } from '@react-google-maps/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst libraries = ['places'];\nconst mapContainerStyle = {\n  width: '100vw',\n  height: '100vh'\n};\nconst center = {\n  lat: 37.7749,\n  lng: -122.4194\n};\nconst Map = () => {\n  _s();\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries\n  });\n  const [markers, setMarkers] = useState([]);\n  const [userLocation, setUserLocation] = useState(null);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setUserLocation({\n        lat: latitude,\n        lng: longitude\n      });\n    }, () => null);\n  }, []);\n  const fetchNearbyPlaces = async () => {\n    if (!userLocation) return;\n    try {\n      const response = await axios.get('http://localhost:5000/places/nearby', {\n        params: {\n          lat: userLocation.lat,\n          lng: userLocation.lng,\n          type: 'pharmacy'\n        }\n      });\n      const places = response.data.results.map(place => {\n        const latitude = typeof place.geometry.location.lat === 'function' ? place.geometry.location.lat() : place.geometry.location.lat;\n        const longitude = typeof place.geometry.location.lng === 'function' ? place.geometry.location.lng() : place.geometry.location.lng;\n        return {\n          id: place.place_id,\n          lat: latitude,\n          lng: longitude\n        };\n      });\n      setMarkers(places);\n    } catch (error) {\n      console.error('Error fetching nearby places:', error);\n    }\n  };\n  useEffect(() => {\n    fetchNearbyPlaces();\n  }, [userLocation]);\n  if (loadError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error loading maps\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 25\n  }, this);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading Maps...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: mapContainerStyle,\n    zoom: 13,\n    center: userLocation || center,\n    children: [userLocation && /*#__PURE__*/_jsxDEV(Marker, {\n      position: userLocation,\n      icon: {\n        url: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), markers.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: marker.lat,\n        lng: marker.lng\n      },\n      icon: {\n        url: 'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\n      }\n    }, marker.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"yj7WnfafYunVX40sBDAjvLr5BKs=\", false, function () {\n  return [useLoadScript];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","Marker","useLoadScript","axios","jsxDEV","_jsxDEV","libraries","mapContainerStyle","width","height","center","lat","lng","Map","_s","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","markers","setMarkers","userLocation","setUserLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","fetchNearbyPlaces","response","get","params","type","places","data","results","map","place","geometry","location","id","place_id","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","zoom","icon","url","marker","_c","$RefreshReg$"],"sources":["C:/Users/MSI/Desktop/google_maps_app/frontend/my-maps-app/src/components/Map.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GoogleMap, Marker, useLoadScript } from '@react-google-maps/api';\r\nimport axios from 'axios';\r\n\r\nconst libraries = ['places'];\r\n\r\nconst mapContainerStyle = {\r\n  width: '100vw',\r\n  height: '100vh',\r\n};\r\n\r\nconst center = {\r\n  lat: 37.7749,\r\n  lng: -122.4194,\r\n};\r\n\r\nconst Map = () => {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n    libraries,\r\n  });\r\n\r\n  const [markers, setMarkers] = useState([]);\r\n  const [userLocation, setUserLocation] = useState(null);\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        setUserLocation({ lat: latitude, lng: longitude });\r\n      },\r\n      () => null\r\n    );\r\n  }, []);\r\n\r\n  const fetchNearbyPlaces = async () => {\r\n    if (!userLocation) return;\r\n\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/places/nearby', {\r\n        params: {\r\n          lat: userLocation.lat,\r\n          lng: userLocation.lng,\r\n          type: 'pharmacy',\r\n        },\r\n      });\r\n\r\n      const places = response.data.results.map((place) => {\r\n        const latitude = typeof place.geometry.location.lat === 'function' ? place.geometry.location.lat() : place.geometry.location.lat;\r\n        const longitude = typeof place.geometry.location.lng === 'function' ? place.geometry.location.lng() : place.geometry.location.lng;\r\n        return {\r\n          id: place.place_id,\r\n          lat: latitude,\r\n          lng: longitude,\r\n        };\r\n      });\r\n\r\n      setMarkers(places);\r\n    } catch (error) {\r\n      console.error('Error fetching nearby places:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchNearbyPlaces();\r\n  }, [userLocation]);\r\n\r\n  if (loadError) return <div>Error loading maps</div>;\r\n  if (!isLoaded) return <div>Loading Maps...</div>;\r\n\r\n  return (\r\n    <GoogleMap\r\n      mapContainerStyle={mapContainerStyle}\r\n      zoom={13}\r\n      center={userLocation || center}\r\n    >\r\n      {userLocation && (\r\n        <Marker\r\n          position={userLocation}\r\n          icon={{\r\n            url: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png',\r\n          }}\r\n        />\r\n      )}\r\n      {markers.map((marker) => (\r\n        <Marker\r\n          key={marker.id}\r\n          position={{ lat: marker.lat, lng: marker.lng }}\r\n          icon={{\r\n            url: 'http://maps.google.com/mapfiles/ms/icons/red-dot.png',\r\n          }}\r\n        />\r\n      ))}\r\n    </GoogleMap>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}