{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Desktop\\\\google_maps_app\\\\frontend\\\\my-maps-app\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, useLoadScript, Marker, Autocomplete } from '@react-google-maps/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapContainerStyle = {\n  width: '100vw',\n  height: '100vh'\n};\nconst libraries = ['places'];\nconst Map = () => {\n  _s();\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries\n  });\n  const [userLocation, setUserLocation] = useState({\n    lat: 0,\n    lng: 0\n  });\n  const [places, setPlaces] = useState([]);\n  const [autocomplete, setAutocomplete] = useState(null);\n  const [placeType, setPlaceType] = useState('pharmacy');\n  useEffect(() => {\n    const fetchUserLocation = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.error('No token found');\n        return;\n      }\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(async position => {\n          const newLocation = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          };\n          setUserLocation(newLocation);\n          try {\n            await axios.post('http://localhost:5000/users/update-location', newLocation, {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n          } catch (error) {\n            console.error('Error updating location:', error);\n          }\n        });\n      }\n    };\n    fetchUserLocation();\n  }, []);\n  const findNearbyPlaces = async type => {\n    try {\n      const res = await axios.get('http://localhost:5000/places/nearby', {\n        params: {\n          lat: userLocation.lat,\n          lng: userLocation.lng,\n          type: type\n        }\n      });\n      setPlaces(res.data.results);\n    } catch (error) {\n      console.error('Error fetching nearby places:', error);\n    }\n  };\n  const onPlaceChanged = () => {\n    if (autocomplete) {\n      const place = autocomplete.getPlace();\n      if (place.geometry) {\n        const newLocation = {\n          lat: place.geometry.location.lat(),\n          lng: place.geometry.location.lng()\n        };\n        setUserLocation(newLocation);\n      }\n    }\n  };\n  if (loadError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error loading maps\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 25\n  }, this);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading Maps\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"placeType\",\n        children: \"Find nearby: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"placeType\",\n        value: placeType,\n        onChange: e => setPlaceType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pharmacy\",\n          children: \"Pharmacy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"hospital\",\n          children: \"Hospital\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"restaurant\",\n          children: \"Restaurant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"atm\",\n          children: \"ATM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => findNearbyPlaces(placeType),\n        children: [\"Find Nearby \", placeType, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n        onLoad: auto => setAutocomplete(auto),\n        onPlaceChanged: onPlaceChanged,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search for a place\",\n          style: {\n            width: '400px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      zoom: 12,\n      center: userLocation,\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        position: userLocation,\n        icon: {\n          url: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), places.map((place, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: place.geometry.location.lat(),\n          lng: place.geometry.location.lng()\n        },\n        label: place.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"4SV08vy0vzuxdHJJ5F3LAL0V8fg=\", false, function () {\n  return [useLoadScript];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","useLoadScript","Marker","Autocomplete","axios","jsxDEV","_jsxDEV","mapContainerStyle","width","height","libraries","Map","_s","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","userLocation","setUserLocation","lat","lng","places","setPlaces","autocomplete","setAutocomplete","placeType","setPlaceType","fetchUserLocation","token","localStorage","getItem","console","error","navigator","geolocation","getCurrentPosition","position","newLocation","coords","latitude","longitude","post","headers","Authorization","findNearbyPlaces","type","res","get","params","data","results","onPlaceChanged","place","getPlace","geometry","location","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","onClick","onLoad","auto","placeholder","style","zoom","center","icon","url","map","index","label","name","_c","$RefreshReg$"],"sources":["C:/Users/MSI/Desktop/google_maps_app/frontend/my-maps-app/src/components/Map.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { GoogleMap, useLoadScript, Marker, Autocomplete } from '@react-google-maps/api';\r\nimport axios from 'axios';\r\n\r\nconst mapContainerStyle = {\r\n  width: '100vw',\r\n  height: '100vh',\r\n};\r\n\r\nconst libraries = ['places'];\r\n\r\nconst Map = () => {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n    libraries,\r\n  });\r\n\r\n  const [userLocation, setUserLocation] = useState({ lat: 0, lng: 0 });\r\n  const [places, setPlaces] = useState([]);\r\n  const [autocomplete, setAutocomplete] = useState(null);\r\n  const [placeType, setPlaceType] = useState('pharmacy');\r\n\r\n  useEffect(() => {\r\n    const fetchUserLocation = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        console.error('No token found');\r\n        return;\r\n      }\r\n\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(async (position) => {\r\n          const newLocation = {\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude,\r\n          };\r\n          setUserLocation(newLocation);\r\n\r\n          try {\r\n            await axios.post('http://localhost:5000/users/update-location', newLocation, {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n          } catch (error) {\r\n            console.error('Error updating location:', error);\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n    fetchUserLocation();\r\n  }, []);\r\n\r\n  const findNearbyPlaces = async (type) => {\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/places/nearby', {\r\n        params: {\r\n          lat: userLocation.lat,\r\n          lng: userLocation.lng,\r\n          type: type,\r\n        },\r\n      });\r\n      setPlaces(res.data.results);\r\n    } catch (error) {\r\n      console.error('Error fetching nearby places:', error);\r\n    }\r\n  };\r\n\r\n  const onPlaceChanged = () => {\r\n    if (autocomplete) {\r\n      const place = autocomplete.getPlace();\r\n      if (place.geometry) {\r\n        const newLocation = {\r\n          lat: place.geometry.location.lat(),\r\n          lng: place.geometry.location.lng(),\r\n        };\r\n        setUserLocation(newLocation);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (loadError) return <div>Error loading maps</div>;\r\n  if (!isLoaded) return <div>Loading Maps</div>;\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <label htmlFor=\"placeType\">Find nearby: </label>\r\n        <select\r\n          id=\"placeType\"\r\n          value={placeType}\r\n          onChange={(e) => setPlaceType(e.target.value)}\r\n        >\r\n          <option value=\"pharmacy\">Pharmacy</option>\r\n          <option value=\"hospital\">Hospital</option>\r\n          <option value=\"restaurant\">Restaurant</option>\r\n          <option value=\"atm\">ATM</option>\r\n        </select>\r\n        <button onClick={() => findNearbyPlaces(placeType)}>Find Nearby {placeType}s</button>\r\n      </div>\r\n      <div>\r\n        <Autocomplete\r\n          onLoad={(auto) => setAutocomplete(auto)}\r\n          onPlaceChanged={onPlaceChanged}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search for a place\"\r\n            style={{ width: '400px' }}\r\n          />\r\n        </Autocomplete>\r\n      </div>\r\n      <GoogleMap mapContainerStyle={mapContainerStyle} zoom={12} center={userLocation}>\r\n        <Marker position={userLocation} icon={{ url: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png' }} />\r\n        {places.map((place, index) => (\r\n          <Marker\r\n            key={index}\r\n            position={{\r\n              lat: place.geometry.location.lat(),\r\n              lng: place.geometry.location.lng(),\r\n            }}\r\n            label={place.name}\r\n          />\r\n        ))}\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}